import disnake
from disnake.ext import commands
import os
import openai
from asyncio import sleep as sl
import sqlite3
#from webserver import keep_alive
openai.api_key = "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"
client = commands.Bot(command_prefix='.', intents=disnake.Intents.all())
connection = sqlite3.connect("db.sql")
cursor = connection.cursor()

client.remove_command("help")

for f in os.listdir("./cogs"):
	if f.endswith(".py"):
	    client.load_extension("cogs." + f[:-3])

messages = []

@client.event
async def on_ready():
    print("[info]: –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
    
    cursor.execute("""CREATE TABLE IF NOT EXISTS settings (
    server_id INT,
    work_channel_id INT,
    nsfw INT,
    assistant INT,
    promt TEXT
    )""")
    connection.commit()

    for guild in client.guilds:
        if cursor.execute(f"SELECT nsfw FROM settings WHERE server_id = {guild.id}").fetchone() == None:
            cursor.execute(f"INSERT INTO settings VALUES ({guild.id}, 0, 0, 0, ' ')")
            connection.commit()
        else:
            pass


    await client.change_presence(activity=disnake.Activity(type=disnake.ActivityType.playing,name=f'Loading...'))
    await sl(10)
    await client.change_presence(activity=disnake.Activity(type=disnake.ActivityType.playing,name=f'Loading succesful!'))
    await sl(5)
    while True:
        await client.change_presence(status=disnake.Status.idle,activity=disnake.Activity(type=disnake.ActivityType.listening,name=f'.help | {len(client.guilds)} c–µ—Ä–≤–µ—Ä–æ–≤'))
        await sl(15)
        members = 0
        for guild in client.guilds:
            members += guild.member_count - 1
        await client.change_presence(status=disnake.Status.idle,activity=disnake.Activity(type=disnake.ActivityType.listening,name=f'{len(client.guilds)} c–µ—Ä–≤–µ—Ä–æ–≤ | {members} users'))
        await sl(15)

@client.event
async def on_guild_join(guild):
    if cursor.execute(f"SELECT nsfw FROM settings WHERE server_id = {guild.id}").fetchone() == None:
            cursor.execute(f"INSERT INTO settings VALUES ({guild.id}, 0, 0, 0, ' ')")
            connection.commit()
    else:
        pass
    embedru=disnake.Embed(title="üá∑üá∫–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", description="**–°–ø–∞—Å–∏–±–æ –∑–∞ –≤—ã–±–æ—Ä –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞!\n–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å:\n1. –ö–∞–Ω–∞–ª —Ä–∞–±–æ—Ç—ã: .selectchannel (channel_id)\n2. –•–æ—Ç–∏—Ç–µ –ª–∏ –≤—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ–∂–∏–º –ê–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ AI? .aggressor (0/1, 0 - –Ω–µ—Ç, 1 - –¥–∞)\n–ü–æ–¥—Ä–æ–±–Ω–µ–µ: .help**", color=0xda30ef)
    embedru.set_thumbnail(url="https://i.imgur.com/x0AXT7q.png")
    embedgb=disnake.Embed(title="üá¨üáßWelcome!", description="**Thank you for choosing our bot!\nIn order to use the bot, you need to install:\n1. Work channel: .selectchannel (channel_id)\n2. Do you want to use the Aggressive AI mode? .aggressor (0/1, 0 - NO, 1 - YES)\nMore info: .help**", color=0xda30ef)
    embedgb.set_thumbnail(url="https://i.imgur.com/x0AXT7q.png")
    for channel in guild.text_channels:
        if channel.permissions_for(guild.me).send_messages:
            await channel.send(embed=embedru)
            await channel.send(embed=embedgb)
            break

@client.event
async def on_command_error(ctx, error):
    if isinstance(error, disnake.ext.commands.errors.MissingPermissions):
        await ctx.reply("–î–∞–Ω–Ω–∞—è –∫–æ–º–º–∞–Ω–¥–∞ –≤–∞–º –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞")
    else:
        pass
    
    if isinstance(error, commands.CommandNotFound):
        await ctx.reply("–î–∞–Ω–Ω–æ–π –∫–æ–º–º–∞–Ω–¥—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
    else:
        pass

@commands.has_permissions(administrator=True)
@client.command(aliases=['selectchannel'])
async def __selectchannel(ctx, channel: int = None):
    if channel is None:
        await ctx.reply("–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –∫–∞–Ω–∞–ª–∞.")
    else:
        cursor.execute(f"UPDATE settings SET work_channel_id = {channel} WHERE server_id = {ctx.guild.id}")
        connection.commit()
        await ctx.reply("–£—Å–ø–µ—à–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞—Ç—å—Å—è —Å AI –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ!")

@commands.has_permissions(administrator=True)
@client.command(aliases=['aggressor'])
async def __aggressor(ctx, nsfw: int = None):
    assistant = cursor.execute(f"SELECT assistant FROM settings WHERE server_id = {ctx.guild.id}").fetchone()[0]
    if int(assistant) == 0:
        if nsfw is None:
            await ctx.reply("–£–∫–∞–∂–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ 0/1 (0 - –∑–∞–ø—Ä–µ—Ç –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã, 1 - AI —Å–º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Ä–µ–∂–∏–º–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ AI)")
        else:
            if nsfw == 1:
                cursor.execute(f"UPDATE settings SET nsfw = 1 WHERE server_id = {ctx.guild.id}")
                connection.commit()
                await ctx.reply("–£—Å–ø–µ—à–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞—Ç—å—Å—è —Å AI –≤ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ!")
            elif nsfw == 0:
                cursor.execute(f"UPDATE settings SET nsfw = 0 WHERE server_id = {ctx.guild.id}")
                connection.commit()
                await ctx.reply("–£—Å–ø–µ—à–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞—Ç—å—Å—è —Å AI –≤ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ!")
            else:
                await ctx.reply("–£–∫–∞–∂–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ 0/1 (0 - –∑–∞–ø—Ä–µ—Ç –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã, 1 - AI —Å–º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Ä–µ–∂–∏–º–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ AI)")
    else:
        await ctx.send("–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ.")

@client.command(aliases=['help'])
async def __help(ctx):
    embed=disnake.Embed(title="–ü–æ–º–æ—â—å", color=0xda30ef)
    embed.set_thumbnail(url="https://i.imgur.com/V0pY9Hc.png")
    embed.add_field(name=".help", value="–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", inline=False)
    embed.add_field(name=".selectchannel", value="–í—ã–±–æ—Ä –∫–∞–Ω–∞–ª–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞", inline=False)
    embed.add_field(name=".aggressor", value="–ó–∞–ø—Ä–µ—Ç–∏—Ç—å/–†–∞–∑—Ä–µ—à–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ AI", inline=False)
    embed.add_field(name=".ai", value="–†–∞–∑–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ AI (–±–µ–∑ –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞)", inline=False)
    embed.add_field(name=".assistant", value="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–µ–∂–∏–º –∞—Å–∏—Å—Ç–µ–Ω—Ç–∞ (–∑–∞–ø—Ä–æ—Å –±–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ + –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –ø—Ä–æ–º–ø—Ç—É)", inline=False)
    embed.add_field(name="–í —É–∫–∞–∑–∞–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ - reset", value="–°–±—Ä–æ—Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞", inline=False)
    embed.add_field(name="–í —É–∫–∞–∑–∞–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ - aggresor", value="–ê–∫—Ç–∏–≤–∞—Ü–∏—è –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ AI (–µ—Å–ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)", inline=False)
    embed.set_footer(text="–ì–æ–≤–æ—Ä–∏–º —Å–ø–∞—Å–∏–±–æ IIIpaklevka#2441 –∑–∞ —Ç–∞–∫–æ–µ —á—É–¥–æ!")
    await ctx.send(embed=embed)

@client.command(aliases=['ai'])
async def __ai(ctx, *, promt = None):
    assistant = cursor.execute(f"SELECT assistant FROM settings WHERE server_id = {ctx.guild.id}").fetchone()[0]
    if int(assistant) == 0:
        if promt is None:
            await ctx.reply("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Å–æ–æ–±–µ—â–Ω–∏–µ AI")
        else:
            messages = []
            try:
                messages.append({"role": "user", "content": promt})

                completion = openai.ChatCompletion.create(
                model="gpt-3.5-turbo",
                messages=messages
                )
                chat_response = completion.choices[0].message.content
                await ctx.reply(chat_response)
            except openai.error.RateLimitError:
                await ctx.send("üõ†Ô∏è üá∑üá∫ **–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å –ø–æ–∑–∂–µ.**\n üõ†Ô∏èüá¨üáß **Please try again later.**")
            except openai.error.InvalidRequestError:
                messages = []
                await ctx.send("üõ†Ô∏è üá∑üá∫ **–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å –ø–æ–∑–∂–µ.**\n üõ†Ô∏èüá¨üáß **Please try again later.**\n–ò—Å—Ç–æ—Ä–∏—è —Å–±—Ä–æ—à–µ–Ω–∞ –∏–∑-–∑–∞ –ø—Ä–µ–¥–µ–ª–∞ —Å–∏–º–≤–æ–ª–æ–≤.")
    elif int(assistant) == 1:
        channel = cursor.execute(f"SELECT work_channel_id FROM settings WHERE server_id = {ctx.guild.id}").fetchone()[0]
        promt1 = cursor.execute(f"SELECT promt FROM settings WHERE server_id = {ctx.guild.id}").fetchone()[0]
        if int(channel) == ctx.channel.id:
            if promt is None:
                await ctx.reply("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Å–æ–æ–±–µ—â–Ω–∏–µ AI")
            else:
                messages = [{"role": "system", "content": promt1}]
                promt2 = promt[3:len(promt)]
                try:
                    messages.append({"role": "user", "content": promt2})

                    completion = openai.ChatCompletion.create(
                    model="gpt-3.5-turbo",
                    messages=messages
                    )
                    chat_response = completion.choices[0].message.content
                    await ctx.reply(chat_response)
                except openai.error.RateLimitError:
                    await ctx.send("üõ†Ô∏è üá∑üá∫ **–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å –ø–æ–∑–∂–µ.**\n üõ†Ô∏èüá¨üáß **Please try again later.**")
                except openai.error.InvalidRequestError:
                    messages = []
                    await ctx.send("üõ†Ô∏è üá∑üá∫ **–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å –ø–æ–∑–∂–µ.**\n üõ†Ô∏èüá¨üáß **Please try again later.**\n–ò—Å—Ç–æ—Ä–∏—è —Å–±—Ä–æ—à–µ–Ω–∞ –∏–∑-–∑–∞ –ø—Ä–µ–¥–µ–ª–∞ —Å–∏–º–≤–æ–ª–æ–≤.")
        else:
            pass

        

@commands.has_permissions(administrator=True)
@client.command(aliases=['assistant'])
async def __assistant(ctx, assistant = None):
    if assistant is None:
        await ctx.send("–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (0/1 0 - –í—ã–∫–ª—é—á–µ–Ω–æ 1 - –í–∫–ª—é—á–µ–Ω–æ)")
    else:
        if int(assistant) == 0:
            cursor.execute(f"UPDATE settings SET assistant = 0 WHERE server_id = {ctx.guild.id}")
            connection.commit()
            await ctx.send("–£—Å–ø–µ—à–Ω–æ!")
        elif int(assistant) == 1:
            cursor.execute(f"UPDATE settings SET assistant = 1 WHERE server_id = {ctx.guild.id}")
            connection.commit()
            await ctx.send("–£—Å–ø–µ—à–Ω–æ!")
        else:
            await ctx.send("–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (0/1 0 - –í—ã–∫–ª—é—á–µ–Ω–æ 1 - –í–∫–ª—é—á–µ–Ω–æ)")

@commands.has_permissions(administrator=True)
@client.command(aliases=['promt'])
async def __promt(ctx, *, promt = None):
    if promt is None:
        await ctx.send("–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π promt")
    else:
        cursor.execute(f"UPDATE settings SET promt = '{promt}' WHERE server_id = {ctx.guild.id}")
        connection.commit()
        await ctx.send(f"promt\n{promt}\n—É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")

@client.command(aliases=['request'])
async def __request(ctx, type, *, req):
    if ctx.author.id != 850637553173528597:
        pass
    else:
        if type == 'read':
            await ctx.send(cursor.execute(req).fetchone()[0])
        elif type == 'load':
            cursor.execute(req)
            connection.commit()
            await ctx.add_reaction("‚úÖ")

#######################################################################
##################–°–õ–ï–® –ö–û–ú–ú–ê–ù–î–´ –°–£–ß–ö–ê–ê–ê–ê###############################
#######################################################################

@client.slash_command(description="–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞")
async def help(ctx):
    embed=disnake.Embed(title="–ü–æ–º–æ—â—å", color=0xda30ef)
    embed.set_thumbnail(url="https://i.imgur.com/V0pY9Hc.png")
    embed.add_field(name=".help", value="–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", inline=False)
    embed.add_field(name=".selectchannel", value="–í—ã–±–æ—Ä –∫–∞–Ω–∞–ª–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞", inline=False)
    embed.add_field(name=".aggressor", value="–ó–∞–ø—Ä–µ—Ç–∏—Ç—å/–†–∞–∑—Ä–µ—à–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ AI", inline=False)
    embed.add_field(name=".ai", value="–†–∞–∑–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ AI (–±–µ–∑ –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞)", inline=False)
    embed.add_field(name=".assistant", value="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–µ–∂–∏–º –∞—Å–∏—Å—Ç–µ–Ω—Ç–∞ (–∑–∞–ø—Ä–æ—Å –±–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ + –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –ø—Ä–æ–º–ø—Ç—É)", inline=False)
    embed.add_field(name="–í —É–∫–∞–∑–∞–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ - reset", value="–°–±—Ä–æ—Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞", inline=False)
    embed.add_field(name="–í —É–∫–∞–∑–∞–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ - aggresor", value="–ê–∫—Ç–∏–≤–∞—Ü–∏—è –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ AI (–µ—Å–ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)", inline=False)
    embed.set_footer(text="–ì–æ–≤–æ—Ä–∏–º —Å–ø–∞—Å–∏–±–æ IIIpaklevka#2441 –∑–∞ —Ç–∞–∫–æ–µ —á—É–¥–æ!")
    await ctx.send(embed=embed)

@commands.has_permissions(administrator=True)
@client.slash_command(description="–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–º—É —Ä–µ–∂–∏–º—É —Ä–∞–±–æ—Ç—ã AI")
async def aggressor(ctx, nsfw: int = None):
    assistant = cursor.execute(f"SELECT assistant FROM settings WHERE server_id = {ctx.guild.id}").fetchone()[0]
    if int(assistant) == 0:
        if nsfw is None:
            await ctx.send("–£–∫–∞–∂–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ 0/1 (0 - –∑–∞–ø—Ä–µ—Ç –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã, 1 - AI —Å–º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Ä–µ–∂–∏–º–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ AI)")
        else:
            if nsfw == 1:
                cursor.execute(f"UPDATE settings SET nsfw = 1 WHERE server_id = {ctx.guild.id}")
                connection.commit()
                await ctx.send("–£—Å–ø–µ—à–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞—Ç—å—Å—è —Å AI –≤ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ!")
            elif nsfw == 0:
                cursor.execute(f"UPDATE settings SET nsfw = 0 WHERE server_id = {ctx.guild.id}")
                connection.commit()
                await ctx.send("–£—Å–ø–µ—à–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞—Ç—å—Å—è —Å AI –≤ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ!")
            else:
                await ctx.send("–£–∫–∞–∂–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ 0/1 (0 - –∑–∞–ø—Ä–µ—Ç –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã, 1 - AI —Å–º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Ä–µ–∂–∏–º–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ AI)")
    else:
        await ctx.send("–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ.")

@commands.has_permissions(administrator=True)
@client.slash_command(description="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–Ω–∞–ª –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å AI")
async def selectchannel(ctx, channelid: int = None):
    if channelid is None:
        await ctx.send("–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –∫–∞–Ω–∞–ª–∞.")
    else:
        cursor.execute(f"UPDATE settings SET work_channel_id = {channelid} WHERE server_id = {ctx.guild.id}")
        connection.commit()
        await ctx.send("–£—Å–ø–µ—à–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞—Ç—å—Å—è —Å AI –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ!")

"""@client.slash_command(description="–†–∞–∑–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ AI")
async def ai(ctx, promt = None):
    assistant = cursor.execute(f"SELECT assistant FROM settings WHERE server_id = {ctx.guild.id}").fetchone()[0]
    if int(assistant) == 0:
        if promt is None:
            await ctx.reply("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Å–æ–æ–±–µ—â–Ω–∏–µ AI")
        else:
            messages = []
            try:
                messages.append({"role": "user", "content": promt})

                completion = openai.ChatCompletion.create(
                model="gpt-3.5-turbo",
                messages=messages
                )
                chat_response = completion.choices[0].message.content
                await ctx.reply(chat_response)
            except openai.error.RateLimitError:
                await ctx.send("üõ†Ô∏è üá∑üá∫ **–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å –ø–æ–∑–∂–µ.**\n üõ†Ô∏èüá¨üáß **Please try again later.**")
            except openai.error.InvalidRequestError:
                messages = []
                await ctx.send("üõ†Ô∏è üá∑üá∫ **–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å –ø–æ–∑–∂–µ.**\n üõ†Ô∏èüá¨üáß **Please try again later.**\n–ò—Å—Ç–æ—Ä–∏—è —Å–±—Ä–æ—à–µ–Ω–∞ –∏–∑-–∑–∞ –ø—Ä–µ–¥–µ–ª–∞ —Å–∏–º–≤–æ–ª–æ–≤.")
    elif int(assistant) == 1:
        channel = cursor.execute(f"SELECT work_channel_id FROM settings WHERE server_id = {ctx.guild.id}").fetchone()[0]
        promt1 = cursor.execute(f"SELECT promt FROM settings WHERE server_id = {ctx.guild.id}").fetchone()[0]
        if int(channel) == ctx.channel.id:
            if promt is None:
                await ctx.reply("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Å–æ–æ–±–µ—â–Ω–∏–µ AI")
            else:
                messages = [{"role": "system", "content": promt1}]
                try:
                    messages.append({"role": "user", "content": promt})

                    completion = openai.ChatCompletion.create(
                    model="gpt-3.5-turbo",
                    messages=messages
                    )
                    chat_response = completion.choices[0].message.content
                    await ctx.send(chat_response)
                except openai.error.RateLimitError:
                    await ctx.send("üõ†Ô∏è üá∑üá∫ **–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å –ø–æ–∑–∂–µ.**\n üõ†Ô∏èüá¨üáß **Please try again later.**")
                except openai.error.InvalidRequestError:
                    messages = []
                    await ctx.send("üõ†Ô∏è üá∑üá∫ **–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å –ø–æ–∑–∂–µ.**\n üõ†Ô∏èüá¨üáß **Please try again later.**\n–ò—Å—Ç–æ—Ä–∏—è —Å–±—Ä–æ—à–µ–Ω–∞ –∏–∑-–∑–∞ –ø—Ä–µ–¥–µ–ª–∞ —Å–∏–º–≤–æ–ª–æ–≤.")
        else:
            await ctx.reply("–ù–µ –¥–æ—Å—Ç—É–ø–Ω–æ –≤ –¥–∞–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ.")"""

@commands.has_permissions(administrator=True)
@client.slash_command(description='–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã')
async def assistant(ctx, assistant = None):
    if assistant is None:
        await ctx.send("–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (0/1 0 - –í—ã–∫–ª—é—á–µ–Ω–æ 1 - –í–∫–ª—é—á–µ–Ω–æ)")
    else:
        if int(assistant) == 0:
            cursor.execute(f"UPDATE settings SET assistant = 0 WHERE server_id = {ctx.guild.id}")
            connection.commit()
            await ctx.send("–£—Å–ø–µ—à–Ω–æ!")
        elif int(assistant) == 1:
            cursor.execute(f"UPDATE settings SET assistant = 1 WHERE server_id = {ctx.guild.id}")
            connection.commit()
            await ctx.send("–£—Å–ø–µ—à–Ω–æ!")
        else:
            await ctx.send("–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (0/1 0 - –í—ã–∫–ª—é—á–µ–Ω–æ 1 - –í–∫–ª—é—á–µ–Ω–æ)")

@commands.has_permissions(administrator=True)
@client.slash_command(description='–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞—á–∞–ª—å–Ω—ã–π –ø—Ä–æ–º—Ç (–¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ —Ä–µ–∂–∏–º–µ assistant)')
async def promt(ctx, *, promt = None):
    if promt is None:
        await ctx.send("–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π promt")
    else:
        cursor.execute(f"UPDATE settings SET promt = '{promt}' WHERE server_id = {ctx.guild.id}")
        connection.commit()
        await ctx.send(f"promt\n{promt}\n—É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")



client.run("MTEwMTQ5MTY3NDg1ODkyMjA2NQ.GSM047.f_P_H6wTjh7vYXGZVjUYQ7DXJd3tVTrNx27dzg")

